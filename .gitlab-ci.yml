stages:
  - build
  - test
  - deploy

build/product:
  image: node:latest
  stage: build
  before_script:
    - apt-get update -qq && apt-get install
    - yarn install
  script:
    - yarn build
  artifacts:
    paths:
      - build
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
      when: always

build/proto:
  image: node:latest
  stage: build
  before_script:
    - apt-get update -qq && apt-get install
    - yarn install
  script:
    - yarn build
  artifacts:
    paths:
      - build
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"
      when: always

test:
  image: node:latest
  stage: test
  script:
    - echo 'test'
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" ||  $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"
      when: on_success

deploy/product:
  image: python:latest
  stage: deploy
  variables:
    S3_BUCKET_NAME: ddakdae-client
    CF_DISTRIBUTION_ID: E1UCZ1564QEQI0
  script:
    - pip install awscli
    - aws s3 sync build s3://$S3_BUCKET_NAME/
  after_script:
    - aws cloudfront create-invalidation --distribution-id=$CF_DISTRIBUTION_ID --paths '/*'
  dependencies:
    - build/product
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
      when: on_success

deploy/proto:
  image: python:latest
  stage: deploy
  variables:
    S3_BUCKET_NAME: ddakdae-client-proto
  script:
    - pip install awscli
    - aws s3 sync build s3://$S3_BUCKET_NAME/ --acl public-rea
  dependencies:
    - build/proto
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"
      when: on_success
